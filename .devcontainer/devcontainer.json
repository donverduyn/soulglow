// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
	"name": "Node.js & GitHub Actions",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "."
	},
	"features": {
		"ghcr.io/devcontainers/features/node:1": {
			"nodeGypDependencies": true,
			"installYarnUsingApt": true,
			"version": "latest",
			"pnpmVersion": "latest",
			"nvmVersion": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/actions-runner:1": {
			"version": "latest",
			"dotnetVersion": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/act:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"moby": true,
			"enableNonRootDocker": true,
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "latest",
			"helm": "latest",
			"minikube": "latest"
		}
	},
	"capAdd": [
		"SYS_ADMIN" // for sandboxing chromium
	],
	"mounts": [
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached"
		// "source=/run/user/1000/bus,target=/run/user/1000/bus,type=bind,consistency=cached"
		// "source=${localEnv:HOME}/.kube,target=/tmp/.kube,type=bind,consistency=cached",
		// "source=${localEnv:HOME}/.minikube,target=/tmp/.minikube,type=bind,consistency=cached"
	],
  "forwardPorts": [9443],
  // "forwardPorts": [4173, 9222, 6006, 8080, 63315],
  // "appPort": [4173, 6006, 8080, 9222, 63315],
	// we statically bind the dev server so external machines on the network can view it.
	// if the firewall allows, that is.
	"runArgs": [
    "--device=/dev/dri:/dev/dri", 
    "--device=/dev/snd", 
    // "-p=0.0.0.0:4173:4173",
    // "-p=0.0.0.0:6006:6006",
    // "-p=0.0.0.0:9222:9222",
    // "-p=0.0.0.0:8080:8080",
    // "-p=0.0.0.0:63315:63315"
    // "--priviliged",
    // "--sysctl", "fs.inotify.max_queued_events=16384",
    // "--sysctl", "fs.inotify.max_user_instances=8192",
    // "--sysctl", "fs.inotify.max_user_watches=524288",
    // "--ulimit", "nofile=65536:65536"
  ], // "--network=minikube"],
	
	"postCreateCommand": {
		"yarn": "yarn install",
    "playwright": "yarn playwright install --with-deps"
	},
	"postStartCommand": {
		// "gpu": "sudo chown root:video /dev/dri/renderD128 && sudo usermod -aG video $USER"
		// If we consider cross-platform we should run dbus in the container
		// and create mappings for windows and mac by investigating what is communicated
		// over the bind mounted dbus right now.
		// fonts should also be mounted differently for windows and mac
		// In terms of x11 we should investigate how to support (xquartz, x410, vcxsrv, etc.)
		// "dbus": "dbus-daemon --session --address=unix:path=/run/user/1000/bus >/dev/null 2>&1 &"
	},
	// "initializeCommand": [
	// 	"./.devcontainer/host.sh"
	// ],
	"portsAttributes": {
    "63315": {
      "label": "Vitest UI (Chromium)",
      "onAutoForward": "openBrowserOnce"
    },
    "51204": {
      "label": "Vitest UI",
      "onAutoForward": "openBrowserOnce"
    },
		"8080": {
			"label": "Preview",
			"onAutoForward": "silent"
		},	
		// remote extension runs outside of the container
		"9222": {
			"label": "Remote debugging",
			"onAutoForward": "silent"
		}
	},
	"otherPortsAttributes": {
		"onAutoForward": "notify"
	},
	"containerEnv": {
		"ESLINT_USE_FLAT_CONFIG": "false",
    "NODE_NO_WARNINGS": "1",
		"EDITOR": "code",
		"DISPLAY": "${localEnv:DISPLAY}",
		// "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
		// "DBUS_SESSION_BUS_ADDRESS": "disabled",
		"XDG_RUNTIME_DIR": "/tmp/runtime-vscode",
		"PUPPETEER_EXECUTABLE_PATH": "/usr/bin/chromium",
		"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD": "true",
		"PUPPETEER_CACHE_DIR": "${containerWorkspaceFolder}/node_modules/puppeteer/.local-chromium",
		"MINIKUBE_HOME": "/tmp/.minikube"
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"dbaeumer.vscode-eslint",
				"ms-azuretools.vscode-docker",
				"searKing.preview-vscode",
				"github.vscode-github-actions",
				"styled-components.vscode-styled-components",
				"gabrielgrinberg.auto-run-command",
				"stylelint.vscode-stylelint",
				"effectful-tech.effect-vscode",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"YoavBls.pretty-ts-errors",
				"Gruntfuggly.todo-tree",
				"vunguyentuan.vscode-css-variables",
				"vitest.explorer",
				"unifiedjs.vscode-mdx",
				"redhat.vscode-yaml",
				"GitHub.vscode-pull-request-github",
				"GitHub.copilot-chat",
				"GitHub.copilot"
			]
		}
	}
}